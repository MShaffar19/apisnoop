{
  "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory": {
    "removed_tags": [
      "[Driver: csi-hostpath-v0]"
    ],
    "added_tags": [
      "[Driver: csi-hostpath]"
    ]
  },
  "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount": {
    "removed_tags": [
      "[Driver: local]",
      "[LocalVolumeType: dir-link]",
      "[Testpattern: Pre-provisioned PV (default fs)]"
    ],
    "added_tags": [
      "[Driver: gluster]",
      "[Testpattern: Inline-volume (default fs)]"
    ]
  },
  "[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass": {
    "removed_tags": [
      "[k8s.io]"
    ]
  },
  "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1": {
    "removed_tags": [
      "[Volume type: dir]"
    ],
    "added_tags": [
      "[Volume type: dir-bindmounted]"
    ]
  },
  "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount": {
    "removed_tags": [
      "[Driver: nfs]"
    ],
    "added_tags": [
      "[Driver: local]",
      "[LocalVolumeType: dir-bindmounted]"
    ]
  },
  "[k8s.io] Variable Expansion should allow substituting values in a volume subpath [sig-storage][NodeFeature:VolumeSubpathEnvExpansion]": {
    "added_test": true
  },
  "[sig-cli] Kubectl client [k8s.io] Simple pod should contain last line of the log": {
    "added_test": true
  },
  "[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]": {
    "added_tags": [
      "[Conformance]"
    ]
  },
  "[sig-apps] Job should delete a job [Conformance]": {
    "added_tags": [
      "[Conformance]"
    ]
  },
  "[k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period should be submitted and removed [Conformance]": {
    "added_test": true
  },
  "[k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]": {
    "added_tags": [
      "[Conformance]"
    ]
  },
  "[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]": {
    "added_tags": [
      "[Conformance]"
    ]
  },
  "[sig-node] RuntimeClass should run a Pod requesting a RuntimeClass with a configured handler [NodeFeature:RuntimeHandler]": {
    "added_test": true
  },
  "[sig-network] DNS should provide DNS for ExternalName services [Conformance]": {
    "added_tags": [
      "[Conformance]"
    ]
  },
  "[sig-api-machinery] Secrets should fail to create secret due to empty secret key [Conformance]": {
    "added_test": true
  },
  "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted": {
    "removed_tags": [
      "[Volume type: block]"
    ],
    "added_tags": [
      "[Volume type: dir-bindmounted]"
    ]
  },
  "[sig-node] RuntimeClass should reject a Pod requesting a RuntimeClass with an unconfigured handler": {
    "removed_tags": [
      "[k8s.io]"
    ]
  },
  "[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]": {
    "added_tags": [
      "[Conformance]"
    ]
  },
  "[k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]": {
    "added_tags": [
      "[Conformance]"
    ]
  },
  "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should be mountable": {
    "removed_tags": [
      "[Driver: local]",
      "[LocalVolumeType: dir-link-bindmounted]",
      "[Testpattern: Pre-provisioned PV (default fs)]"
    ],
    "added_tags": [
      "[Driver: gcepd]",
      "[Testpattern: Pre-provisioned PV (ext3)]"
    ]
  },
  "[k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]": {
    "added_tags": [
      "[Conformance]"
    ]
  },
  "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path": {
    "removed_tags": [
      "[Driver: hostPathSymlink]",
      "[Testpattern: Inline-volume (default fs)]"
    ],
    "added_tags": [
      "[Driver: local]",
      "[LocalVolumeType: block]",
      "[Testpattern: Pre-provisioned PV (default fs)]"
    ]
  },
  "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and read from pod1": {
    "removed_tags": [
      "[Volume type: dir-bindmounted]"
    ],
    "added_tags": [
      "[Volume type: dir-link]"
    ]
  },
  "[sig-cli] Kubectl client [k8s.io] Simple pod should support exec using resource/name": {
    "added_test": true
  },
  "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a custom resource.": {
    "added_test": true
  },
  "[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass": {
    "removed_tags": [
      "[k8s.io]"
    ]
  },
  "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume": {
    "removed_tags": [
      "[LocalVolumeType: dir-link-bindmounted]",
      "[Testpattern: Pre-provisioned PV (default fs)]"
    ],
    "added_tags": [
      "[LocalVolumeType: block]",
      "[Testpattern: Pre-provisioned PV (ext3)]"
    ]
  },
  "[k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]": {
    "added_tags": [
      "[Conformance]"
    ]
  }
}
